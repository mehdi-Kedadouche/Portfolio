---
interface Props {
	href: string;
}

const { href } = Astro.props;
---

<a href={href}><slot /></a>

<style>
	a {
		position: relative;
		display: flex;
		place-content: center;
		text-align: center;
		padding: 0.56em 2em;
		gap: 0.8em;
		color: var(--accent-text-over);
		text-decoration: none;
		line-height: 1.1;
		border-radius: 999rem;
		overflow: hidden;
		background: var(--gradient-accent-orange);
		box-shadow: var(--shadow-md);
		white-space: nowrap;
		transition: 0.5s;
  		transition-property: box-shadow;
		/* animation: wiggle 4s linear infinite; */
	}

	a {
		background: var(--gradient-accent-orange);
  box-shadow: 0 0 25px rgb(143, 68, 230);
}

a:hover {
	box-shadow: 0 0 5px  rgb(137, 9, 211),
              0 0 25px rgb(137, 9, 211),
              0 0 50px  rgb(137, 9, 211),
              0 0 100px  rgb(82, 4, 131);
}



	
/* Keyframes */
@keyframes wiggle {
  0%, 7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%, 100% {
    transform: rotateZ(0);
  }
}



a {
	transform-origin: 50% 3em;
  /* left: calc(50% - 3em); */
  top: calc(50% - 2em);
  transform-origin: 40% 5em;
}

	@media (min-width: 20em) {
		a {
			font-size: var(--text-lg);
		}
	}

	/* Overlay for hover effects. */
	a::after {
		content: '';
		position: absolute;
		inset: 0;
		pointer-events: none;
		transition: background-color var(--theme-transition);
		mix-blend-mode: overlay;
	}

	a:focus::after,
	a:hover::after {
		background-color: hsla(var(--gray-999-basis), 0.3);
	}

	@media (min-width: 50em) {
		a {
			padding: 1.125rem 2.5rem;
			font-size: var(--text-xl);
		}
	}
</style>
